#[ function a : function             -> *        = !lambda nil !define callee a nil ]
#[ a, b       : symbol   -> function -> function = !lambda a b ]
#[ a => b     : symbol   -> *        -> function = !lambda a b ]
#[ {a}        : *                    -> *        = a ]
#[ a; b       : *        -> *        -> *        = !do a b ]
#[ (a)        : *                    -> *        = a ]

-------------------------------------------------
  無名関数で再帰ができる function マクロ。
    function x => { callee x }
  が
    !lambda nil !define callee !lambda x !funcall callee x nil
  に置換されるので、 callee で再帰ができる。
-------------------------------------------------
(function f, xs => {
  !if xs
     (!cons (f !car xs) (callee f !cdr xs))
     nil
}) (function x => !print x) !cons 1 !cons 2 !cons 3 nil