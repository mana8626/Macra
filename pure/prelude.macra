#[ a; b : *        -> *   -> *   = !do a b ]
#[ (a)  : *        -> *          = a ]
#[ {a}  : function -> *          = a ]
#[ [a]  : list     -> *          = a ]

----------------------------------------
  Standard IO
----------------------------------------
#[ puts a : * -> * = !print a ]

----------------------------------------
  Logical Expressions
----------------------------------------
#[ not a   : * -> *      = !if a nil 0   ]
#[ and a b : * -> * -> * = !if a b   nil ]
#[ or  a b : * -> * -> * = !if a 0   b   ]

----------------------------------------
  Conditional Expressions
----------------------------------------
#[ if a b c : * -> * -> * = !if a b c ]

----------------------------------------
  Function Expressions
----------------------------------------
#[ def id fn : symbol -> function -> *        = !define id fn ]
#[ a => b    : symbol -> *        -> function = !lambda a b   ]
#[ a, b      : symbol -> function -> function = !lambda a b   ]

----------------------------------------
  List Expressions
----------------------------------------
#[ car xs     : * -> *            = !car xs    ]
#[ cdr xs     : * -> *            = !cdr xs    ]
#[ x :cons xs : * -> *    -> list = !cons x xs ]
#[ a, b       : * -> list -> list = !cons a b  ]
#[ a; b       : * -> list -> list = !cons a b  ]

def map f, xs =>
  if (not xs)
      xs
      [f (car xs) :cons (map f (cdr xs))]

; map { x => puts x } [1, 2, 3, nil]