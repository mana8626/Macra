#include prelude


#[ namespace name space : symbol -> namespace -> * = !define name space ]
#[ {a}       : namespace -> * = a ]
#[ def id fn : * -> function -> namespace = [id, fn, nil] ]
#[ a; b      : namespace -> namespace -> namespace = !cons a b ]
#[ ends-here : namespace = nil ]

namespace Bool
{ def "true" x, y => x
; def "false" x, y => y
; ends-here
};

!print Bool;

#[ caar xs : * -> * = !car !car xs ]
#[ cadar xs : * -> * = !car !cdr !car xs ]

def lookup key, pairs =>
  !if (not pairs)
      nil
      !if !equal key (caar pairs)
          (cadar pairs)
          (lookup key (cdr pairs));

!print (lookup "true" Bool 1 2);
!print (lookup "false" Bool 1 2)